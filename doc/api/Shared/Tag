NOTES:
I.   All the calls in this document must have these headers:
        a) Content-Type: application/json
        b) Accept: application/json
        c) Authorization: <token>
           Example: "Authorization: 4233af28e7674dca61b1767baf99b6acada3f6d5c035324a8c66ddf622ab8198c30d0a3ea6a9034f03c1d4e5b463286bf6f7aa9fd06f1021dcc21ba25d729da8"
        d) Error if user is not Authorized for an action
           {
               "errors": {
                   "global": [
                       "Access denied: Api::Controller::AccessDenied"
                   ]
               }
           }

1. Add tag

  Request: POST /api/tags/:tagged_obj_type/:tagged_obj_id
  Example: POST /api/tags/entity/123
  {
    "tag": {
      "id":15,
      "text":"something else"
    }
  }

  Params:
      tagged_obj_type: "entity" - required.
      tagged_obj_id: <integer> id of the object (survey entity id) - required.
      text: tag itself. One from the predefined list "photo", "selfie", "something else" - required.
      id: <integer>. Tag id (if known) - optional. (it will make SQL faster, if "id" is known it"s a good practice to send it)

  Notes: first call will add 1 vote to a "tagged_obj", second call will subtract a vote.

  Response #1: 200 OK
  {
      "id": 15,
      "text": "something else",
      "num_votes": 1,
      "total_score": 1
  }


  Errors:
  Response #2: 404 NOT FOUND
  {
      "errors": {
          "global": [
              "Resource not found"
          ]
      }
  }

  Response #3: 422 UNPROCESSABLE ENTITY
  {
      "errors": {
          "text": [
              "parameter is required"
          ]
      }
  }

  Response #4: 422 UNPROCESSABLE ENTITY
  {
      "errors": {
          "text": [
              "is not included in the list"
          ]
      }
  }


2. Get information about tagged object tag.

  Request: GET /api/tags/:tagged_obj_type/:tagged_obj_id/:tag_id
  Example: GET /api/tags/entity/20/14

  Params: see "1. Add tag above"

  Response #1: 200 OK
  {
      "id": 14,
      "text": "something else",
      "num_votes": 2,
      "total_score": 2
  }

  Errors: see "1. Add tag above"

3. Get information about all tagged object tags.

  Request: GET /api/tags/:tagged_obj_type/:tagged_obj_id
  Example: GET /api/tags/entity/20

  Params: see "1. Add tag above". Pagination params (doc/api/Shared/Pagination) can be used as well.

  Response #1: 200 OK
  {
      "tags": [
          {
              "id": 14,
              "text": "something else",
              "num_votes": 2,
              "total_score": 2
          }
      ],
      "more": 0
  }

  Errors: see "1. Add tag above"
